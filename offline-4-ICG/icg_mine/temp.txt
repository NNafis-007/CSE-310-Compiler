.MODEL SMALL
.STACK 1000H
.DATA
	number DB "00000$"
.CODE
func PROC
	PUSH BP
	MOV BP, SP

	SUB SP , 2
	MOV AX, [BP+4]
	PUSH AX
	MOV AX, 0		; Line 3
	POP DX
	CMP DX, AX
	JE L1
	JMP L2
L1:
	MOV AX, 1
	PUSH AX
	JMP L3
L2:
	MOV AX, 0
	PUSH AX
L3:
	POP AX
	CMP AX, 0
	JE L4
	MOV AX, 0		; Line 3
	JMP L6
L4:
	MOV AX, [BP+4]
	MOV [BP-2], AX		; Line 4

	MOV AX, [BP+4]
	PUSH AX
	MOV AX, 1		; Line 5
	POP DX
	XCHG DX, AX
	SUB AX, DX
	PUSH AX
	CALL func		; Line 5
	PUSH AX
	MOV AX, [BP-2]
	POP DX
	ADD AX, DX
	JMP L6
L6:
	ADD SP, 2
	POP BP
	RET 2
func ENDP

func2 PROC
	PUSH BP
	MOV BP, SP

	SUB SP , 2
	MOV AX, [BP+4]
	PUSH AX
	MOV AX, 0		; Line 10
	POP DX
	CMP DX, AX
	JE L7
	JMP L8
L7:
	MOV AX, 1
	PUSH AX
	JMP L9
L8:
	MOV AX, 0
	PUSH AX
L9:
	POP AX
	CMP AX, 0
	JE L10
	MOV AX, 0		; Line 10
	JMP L12
L10:
	MOV AX, [BP+4]
	MOV [BP-2], AX		; Line 11

	MOV AX, [BP+4]
	PUSH AX
	MOV AX, 1		; Line 12
	POP DX
	XCHG DX, AX
	SUB AX, DX
	PUSH AX
	CALL func		; Line 12
	PUSH AX
	MOV AX, [BP-2]
	POP DX
	ADD AX, DX
	JMP L12
L12:
	ADD SP, 2
	POP BP
	RET 2
func2 ENDP

main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP

	SUB SP , 2
	MOV AX, 7		; Line 17
	PUSH AX
	CALL func		; Line 17
	MOV [BP-2], AX		; Line 17

	CALL print_output
	CALL new_line

	MOV AX, 0		; Line 19
	JMP L13
L13:
	ADD SP, 2
	POP BP
	MOV AX, 4Ch
	INT 21h
main ENDP
