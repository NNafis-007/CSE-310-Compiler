main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP

	SUB SP , 2
	SUB SP , 2
	SUB SP , 2
	SUB SP , 2
	SUB SP , 2
	SUB SP , 2
	MOV AX, 1
	PUSH AX
	POP AX
	MOV i, AX
	PUSH AX
	POP AX

	MOV AX, i		; Line 7
	CALL print_output
	CALL new_line

	MOV AX, 8
	PUSH AX
	MOV AX, 5
	PUSH AX
	POP AX
	POP DX
	ADD AX, DX
	PUSH AX
	POP AX
	MOV j, AX
	PUSH AX
	POP AX

	MOV AX, j		; Line 10
	CALL print_output
	CALL new_line

	MOV AX, i
	PUSH AX
	MOV AX, 2
	PUSH AX
	MOV AX, j
	PUSH AX
	POP AX
	POP CX
	CWD
	MUL CX
	PUSH AX
	POP AX
	POP DX
	ADD AX, DX
	PUSH AX
	POP AX
	MOV [BP-2], AX
	PUSH AX
	POP AX

	MOV AX, [BP-2]		; Line 13
	CALL print_output
	CALL new_line

	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 9
	PUSH AX
	POP AX
	POP CX
	XCHG CX, AX
	CWD
	DIV CX
	PUSH DX
	POP AX
	MOV [BP-6], AX
	PUSH AX
	POP AX

	MOV AX, [BP-6]		; Line 16
	CALL print_output
	CALL new_line

	MOV AX, [BP-6]
	PUSH AX
	MOV AX, [BP-4]
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JLE L1
	JMP L2
L1:
	MOV AX, 1
	PUSH AX
	JMP L3
L2:
	MOV AX, 0
	PUSH AX
L3:
	POP AX
	MOV [BP-8], AX
	PUSH AX
	POP AX

	MOV AX, [BP-8]		; Line 19
	CALL print_output
	CALL new_line

	MOV AX, i
	PUSH AX
	MOV AX, j
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JNE L4
	JMP L5
L4:
	MOV AX, 1
	PUSH AX
	JMP L6
L5:
	MOV AX, 0
	PUSH AX
L6:
	POP AX
	MOV [BP-10], AX
	PUSH AX
	POP AX

	MOV AX, [BP-10]		; Line 22
	CALL print_output
	CALL new_line

	MOV AX, [BP-8]
	PUSH AX
	MOV AX, [BP-10]
	PUSH AX
	POP AX
	POP DX
	CMP DX, 0
	JNE L7
	CMP AX, 0
	JNE L7
	MOV AX, 0
	PUSH AX
	JMP L8
L7:
	MOV AX, 1
	PUSH AX
	JMP L8
L8:
	POP AX
	MOV [BP-12], AX
	PUSH AX
	POP AX

	MOV AX, [BP-12]		; Line 25
	CALL print_output
	CALL new_line

	MOV AX, [BP-8]
	PUSH AX
	MOV AX, [BP-10]
	PUSH AX
	POP AX
	POP DX
	CMP DX, 0
	JE L9
	CMP AX, 0
	JE L9
	MOV AX, 1
	PUSH AX
	JMP L10
L9:
	MOV AX, 0
	PUSH AX
	JMP L10
L10:
	POP AX
	MOV [BP-12], AX
	PUSH AX
	POP AX

	MOV AX, [BP-12]		; Line 28
	CALL print_output
	CALL new_line

	MOV AX, [BP-12]
	PUSH AX
	INC AX
	MOV [BP-12], AX
	POP AX

	MOV AX, [BP-12]		; Line 31
	CALL print_output
	CALL new_line

	MOV AX, [BP-12]
	PUSH AX
	POP AX
	NEG AX
	PUSH AX
	POP AX
	MOV [BP-2], AX
	PUSH AX
	POP AX

	MOV AX, [BP-2]		; Line 34
	CALL print_output
	CALL new_line

	MOV AX, 0
	PUSH AX

	POP BP
	MOV AX, 4Ch
	INT 21h
main ENDP
