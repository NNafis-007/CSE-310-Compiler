main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP

	SUB SP , 2
	SUB SP , 20
	MOV AX, 0		; Line 6
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array w
	MOV AX, 2		; Line 6
	PUSH AX
	POP AX
	NEG AX
	PUSH AX
	POP AX
	MOV w[BX], AX		; Line 6
	PUSH AX
	POP AX 		; Line 6

	MOV AX, 0		; Line 7
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array x
	MOV SI, BX
	ADD SI, 4
	NEG SI
	MOV AX, 0		; Line 7
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array w
	MOV AX, w[BX]
	PUSH AX
	POP AX
	MOV [BP+SI], AX		; Line 7
	PUSH AX
	POP AX 		; Line 7

	MOV AX, 0		; Line 8
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array x
	MOV SI, BX
	ADD SI, 4
	NEG SI
	MOV AX, [BP+SI]
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 8
	PUSH AX
	POP AX 		; Line 8

	MOV AX, [BP-2]		; Line 9
	CALL print_output
	CALL new_line

	MOV AX, 1		; Line 10
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array x
	MOV SI, BX
	ADD SI, 4
	NEG SI
	MOV AX, 0		; Line 10
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array w
	MOV AX, w[BX]
	PUSH AX
	INC AX
	MOV w[BX], AX
	POP AX
	MOV [BP+SI], AX		; Line 10
	PUSH AX
	POP AX 		; Line 10

	MOV AX, 1		; Line 11
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array x
	MOV SI, BX
	ADD SI, 4
	NEG SI
	MOV AX, [BP+SI]
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 11
	PUSH AX
	POP AX 		; Line 11

	MOV AX, [BP-2]		; Line 12
	CALL print_output
	CALL new_line

	MOV AX, 0		; Line 13
	PUSH AX
	POP BX
	SHL BX, 1		 ; offset for array w
	MOV AX, w[BX]
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 13
	PUSH AX
	POP AX 		; Line 13

	MOV AX, [BP-2]		; Line 14
	CALL print_output
	CALL new_line

	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 0		; Line 16
	PUSH AX
	POP AX
	POP DX
	ADD AX, DX
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 16
	PUSH AX
	POP AX 		; Line 16

	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 0		; Line 17
	PUSH AX
	POP AX
	POP DX
	XCHG DX, AX
	SUB AX, DX
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 17
	PUSH AX
	POP AX 		; Line 17

	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 1		; Line 18
	PUSH AX
	POP AX
	POP CX
	CWD
	MUL CX
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 18
	PUSH AX
	POP AX 		; Line 18

	MOV AX, [BP-2]		; Line 19
	CALL print_output
	CALL new_line

	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 0		; Line 21
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JG L1
	JMP L2
L1:
	MOV AX, 1
	PUSH AX
	JMP L3
L2:
	MOV AX, 0
	PUSH AX
L3:
	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 10		; Line 21
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JL L4
	JMP L5
L4:
	MOV AX, 1
	PUSH AX
	JMP L6
L5:
	MOV AX, 0
	PUSH AX
L6:
	POP AX
	POP DX
	CMP DX, 0
	JE L7
	CMP AX, 0
	JE L7
	MOV AX, 1
	PUSH AX
	JMP L8
L7:
	MOV AX, 0
	PUSH AX
	JMP L8
L8:
	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 0		; Line 21
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JL L9
	JMP L10
L9:
	MOV AX, 1
	PUSH AX
	JMP L11
L10:
	MOV AX, 0
	PUSH AX
L11:
	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 10		; Line 21
	PUSH AX
	POP AX
	NEG AX
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JG L12
	JMP L13
L12:
	MOV AX, 1
	PUSH AX
	JMP L14
L13:
	MOV AX, 0
	PUSH AX
L14:
	POP AX
	POP DX
	CMP DX, 0
	JE L15
	CMP AX, 0
	JE L15
	MOV AX, 1
	PUSH AX
	JMP L16
L15:
	MOV AX, 0
	PUSH AX
	JMP L16
L16:
	POP AX
	POP DX
	CMP DX, 0
	JNE L17
	CMP AX, 0
	JNE L17
	MOV AX, 0
	PUSH AX
	JMP L18
L17:
	MOV AX, 1
	PUSH AX
	JMP L18
L18:
	POP AX
	CMP AX, 0
	JE L19
	MOV AX, 100		; Line 22
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 22
	PUSH AX
	POP AX 		; Line 22

	JMP L20
L19:
	MOV AX, 200		; Line 24
	PUSH AX
	POP AX
	MOV [BP-2], AX		; Line 24
	PUSH AX
	POP AX 		; Line 24

L20:
	MOV AX, [BP-2]		; Line 25
	CALL print_output
	CALL new_line

	MOV AX, 0		; Line 27
	PUSH AX
	POP AX 		; Line 27
	JMP L21
L21:
	ADD SP, 22
	POP BP
	MOV AX, 4Ch
	INT 21h
main ENDP
