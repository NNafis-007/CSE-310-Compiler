main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP

	SUB SP , 2
	SUB SP , 2
	SUB SP , 2
	MOV AX, 3		; Line 5
	PUSH AX
	POP AX
	MOV [BP-2], AX
	PUSH AX
	POP AX 		; Line 5

	MOV AX, 8		; Line 6
	PUSH AX
	POP AX
	MOV [BP-4], AX
	PUSH AX
	POP AX 		; Line 6

	MOV AX, 6		; Line 7
	PUSH AX
	POP AX
	MOV [BP-6], AX
	PUSH AX
	POP AX 		; Line 7

	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 3		; Line 10
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JE L1
	JMP L2
L1:
	MOV AX, 1
	PUSH AX
	JMP L3
L2:
	MOV AX, 0
	PUSH AX
L3:
	POP AX
	CMP AX, 0
	JE L4
	MOV AX, [BP-4]		; Line 11
	CALL print_output
	CALL new_line

L4:
	MOV AX, [BP-4]
	PUSH AX
	MOV AX, 8		; Line 14
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JL L5
	JMP L6
L5:
	MOV AX, 1
	PUSH AX
	JMP L7
L6:
	MOV AX, 0
	PUSH AX
L7:
	POP AX
	CMP AX, 0
	JE L8
	MOV AX, [BP-2]		; Line 15
	CALL print_output
	CALL new_line

	JMP L9
L8:
	MOV AX, [BP-6]		; Line 18
	CALL print_output
	CALL new_line

L9:
	MOV AX, [BP-6]
	PUSH AX
	MOV AX, 6		; Line 21
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JNE L10
	JMP L11
L10:
	MOV AX, 1
	PUSH AX
	JMP L12
L11:
	MOV AX, 0
	PUSH AX
L12:
	POP AX
	CMP AX, 0
	JE L13
	MOV AX, [BP-6]		; Line 22
	CALL print_output
	CALL new_line

	JMP L14
L13:
	MOV AX, [BP-4]
	PUSH AX
	MOV AX, 8		; Line 24
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JG L15
	JMP L16
L15:
	MOV AX, 1
	PUSH AX
	JMP L17
L16:
	MOV AX, 0
	PUSH AX
L17:
	POP AX
	CMP AX, 0
	JE L18
	MOV AX, [BP-4]		; Line 25
	CALL print_output
	CALL new_line

	JMP L19
L18:
	MOV AX, [BP-2]
	PUSH AX
	MOV AX, 5		; Line 27
	PUSH AX
	POP AX
	POP DX
	CMP DX, AX
	JL L20
	JMP L21
L20:
	MOV AX, 1
	PUSH AX
	JMP L22
L21:
	MOV AX, 0
	PUSH AX
L22:
	POP AX
	CMP AX, 0
	JE L23
	MOV AX, [BP-2]		; Line 28
	CALL print_output
	CALL new_line

	JMP L24
L23:
	MOV AX, 0		; Line 31
	PUSH AX
	POP AX
	MOV [BP-6], AX
	PUSH AX
	POP AX 		; Line 31

	MOV AX, [BP-6]		; Line 32
	CALL print_output
	CALL new_line

L24:
L19:
L14:
	MOV AX, 0		; Line 36
	PUSH AX

	POP BP
	MOV AX, 4Ch
	INT 21h
main ENDP
