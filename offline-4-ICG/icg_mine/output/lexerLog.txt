Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme a
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme b
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme c
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 3: Token <VOID> Lexeme void
Line# 3: Token <ID> Lexeme func_a
Line# 3: Token <LPAREN> Lexeme (
Line# 3: Token <RPAREN> Lexeme )
Line# 3: Token <LCURL> Lexeme {
Line# 4: Token <ID> Lexeme a
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 7
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <RCURL> Lexeme }
Line# 7: Token <INT> Lexeme int
Line# 7: Token <ID> Lexeme foo
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <INT> Lexeme int
Line# 7: Token <ID> Lexeme a
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <LCURL> Lexeme {
Line# 8: Token <ID> Lexeme a
Line# 8: Token <ASSIGNOP> Lexeme =
Line# 8: Token <ID> Lexeme a
Line# 8: Token <ADDOP> Lexeme +
Line# 8: Token <CONST_INT> Lexeme 3
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RETURN> Lexeme return
Line# 9: Token <ID> Lexeme a
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <RCURL> Lexeme }
Line# 13: Token <INT> Lexeme int
Line# 13: Token <ID> Lexeme bar
Line# 13: Token <LPAREN> Lexeme (
Line# 13: Token <INT> Lexeme int
Line# 13: Token <ID> Lexeme a
Line# 13: Token <COMMA> Lexeme ,
Line# 13: Token <INT> Lexeme int
Line# 13: Token <ID> Lexeme b
Line# 13: Token <RPAREN> Lexeme )
Line# 13: Token <LCURL> Lexeme {
Line# 14: Token <ID> Lexeme c
Line# 14: Token <ASSIGNOP> Lexeme =
Line# 14: Token <CONST_INT> Lexeme 4
Line# 14: Token <MULOP> Lexeme *
Line# 14: Token <ID> Lexeme a
Line# 14: Token <ADDOP> Lexeme +
Line# 14: Token <CONST_INT> Lexeme 2
Line# 14: Token <MULOP> Lexeme *
Line# 14: Token <ID> Lexeme b
Line# 14: Token <SEMICOLON> Lexeme ;
Line# 15: Token <RETURN> Lexeme return
Line# 15: Token <ID> Lexeme c
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 16: Token <RCURL> Lexeme }
Line# 18: Token <INT> Lexeme int
Line# 18: Token <ID> Lexeme main
Line# 18: Token <LPAREN> Lexeme (
Line# 18: Token <RPAREN> Lexeme )
Line# 18: Token <LCURL> Lexeme {
Line# 20: Token <INT> Lexeme int
Line# 20: Token <ID> Lexeme i
Line# 20: Token <COMMA> Lexeme ,
Line# 20: Token <ID> Lexeme j
Line# 20: Token <COMMA> Lexeme ,
Line# 20: Token <ID> Lexeme k
Line# 20: Token <COMMA> Lexeme ,
Line# 20: Token <ID> Lexeme l
Line# 20: Token <SEMICOLON> Lexeme ;
Line# 22: Token <ID> Lexeme i
Line# 22: Token <ASSIGNOP> Lexeme =
Line# 22: Token <CONST_INT> Lexeme 5
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 23: Token <ID> Lexeme j
Line# 23: Token <ASSIGNOP> Lexeme =
Line# 23: Token <CONST_INT> Lexeme 6
Line# 23: Token <SEMICOLON> Lexeme ;
Line# 25: Token <ID> Lexeme func_a
Line# 25: Token <LPAREN> Lexeme (
Line# 25: Token <RPAREN> Lexeme )
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 26: Token <PRINTLN> Lexeme println
Line# 26: Token <LPAREN> Lexeme (
Line# 26: Token <ID> Lexeme a
Line# 26: Token <RPAREN> Lexeme )
Line# 26: Token <SEMICOLON> Lexeme ;
Line# 28: Token <ID> Lexeme k
Line# 28: Token <ASSIGNOP> Lexeme =
Line# 28: Token <ID> Lexeme foo
Line# 28: Token <LPAREN> Lexeme (
Line# 28: Token <ID> Lexeme i
Line# 28: Token <RPAREN> Lexeme )
Line# 28: Token <SEMICOLON> Lexeme ;
Line# 29: Token <PRINTLN> Lexeme println
Line# 29: Token <LPAREN> Lexeme (
Line# 29: Token <ID> Lexeme k
Line# 29: Token <RPAREN> Lexeme )
Line# 29: Token <SEMICOLON> Lexeme ;
Line# 31: Token <ID> Lexeme l
Line# 31: Token <ASSIGNOP> Lexeme =
Line# 31: Token <ID> Lexeme bar
Line# 31: Token <LPAREN> Lexeme (
Line# 31: Token <ID> Lexeme i
Line# 31: Token <COMMA> Lexeme ,
Line# 31: Token <ID> Lexeme j
Line# 31: Token <RPAREN> Lexeme )
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 32: Token <PRINTLN> Lexeme println
Line# 32: Token <LPAREN> Lexeme (
Line# 32: Token <ID> Lexeme l
Line# 32: Token <RPAREN> Lexeme )
Line# 32: Token <SEMICOLON> Lexeme ;
Line# 34: Token <ID> Lexeme j
Line# 34: Token <ASSIGNOP> Lexeme =
Line# 34: Token <CONST_INT> Lexeme 6
Line# 34: Token <MULOP> Lexeme *
Line# 34: Token <ID> Lexeme bar
Line# 34: Token <LPAREN> Lexeme (
Line# 34: Token <ID> Lexeme i
Line# 34: Token <COMMA> Lexeme ,
Line# 34: Token <ID> Lexeme j
Line# 34: Token <RPAREN> Lexeme )
Line# 34: Token <ADDOP> Lexeme +
Line# 34: Token <CONST_INT> Lexeme 2
Line# 34: Token <ADDOP> Lexeme -
Line# 34: Token <CONST_INT> Lexeme 3
Line# 34: Token <MULOP> Lexeme *
Line# 34: Token <ID> Lexeme foo
Line# 34: Token <LPAREN> Lexeme (
Line# 34: Token <ID> Lexeme i
Line# 34: Token <RPAREN> Lexeme )
Line# 34: Token <SEMICOLON> Lexeme ;
Line# 35: Token <PRINTLN> Lexeme println
Line# 35: Token <LPAREN> Lexeme (
Line# 35: Token <ID> Lexeme j
Line# 35: Token <RPAREN> Lexeme )
Line# 35: Token <SEMICOLON> Lexeme ;
Line# 38: Token <RETURN> Lexeme return
Line# 38: Token <CONST_INT> Lexeme 0
Line# 38: Token <SEMICOLON> Lexeme ;
Line# 39: Token <RCURL> Lexeme }
