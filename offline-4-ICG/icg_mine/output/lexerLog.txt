Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme i
Line# 3: Token <COMMA> Lexeme ,
Line# 3: Token <ID> Lexeme j
Line# 3: Token <COMMA> Lexeme ,
Line# 3: Token <ID> Lexeme k
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 5: Token <FOR> Lexeme for
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <ASSIGNOP> Lexeme =
Line# 5: Token <CONST_INT> Lexeme 0
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme i
Line# 5: Token <CONST_INT> Lexeme 6
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme i
Line# 5: Token <INCOP> Lexeme ++
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <LCURL> Lexeme {
Line# 6: Token <PRINTLN> Lexeme println
Line# 6: Token <LPAREN> Lexeme (
Line# 6: Token <ID> Lexeme i
Line# 6: Token <RPAREN> Lexeme )
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 10: Token <RETURN> Lexeme return
Line# 10: Token <CONST_INT> Lexeme 0
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 11: Token <RCURL> Lexeme }
