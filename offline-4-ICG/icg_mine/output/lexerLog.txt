Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme x
Line# 3: Token <COMMA> Lexeme ,
Line# 3: Token <ID> Lexeme y
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme main
Line# 4: Token <LPAREN> Lexeme (
Line# 4: Token <RPAREN> Lexeme )
Line# 4: Token <LCURL> Lexeme {
Line# 5: Token <INT> Lexeme int
Line# 5: Token <ID> Lexeme i
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme i
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 4
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <ID> Lexeme i
Line# 7: Token <ASSIGNOP> Lexeme =
Line# 7: Token <ID> Lexeme i
Line# 7: Token <ADDOP> Lexeme +
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <ID> Lexeme i
Line# 8: Token <ASSIGNOP> Lexeme =
Line# 8: Token <ID> Lexeme i
Line# 8: Token <ADDOP> Lexeme -
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <ID> Lexeme i
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <ID> Lexeme i
Line# 9: Token <MULOP> Lexeme *
Line# 9: Token <CONST_INT> Lexeme 1
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <PRINTLN> Lexeme println
Line# 10: Token <LPAREN> Lexeme (
Line# 10: Token <ID> Lexeme i
Line# 10: Token <RPAREN> Lexeme )
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 11: Token <RETURN> Lexeme return
Line# 11: Token <CONST_INT> Lexeme 0
Line# 11: Token <SEMICOLON> Lexeme ;
Line# 12: Token <RCURL> Lexeme }
