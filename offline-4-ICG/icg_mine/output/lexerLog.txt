Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme i
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme j
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme k
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme ll
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme m
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme n
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme o
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme p
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme i
Line# 5: Token <ASSIGNOP> Lexeme =
Line# 5: Token <CONST_INT> Lexeme 2
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme j
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 3
Line# 6: Token <ADDOP> Lexeme +
Line# 6: Token <ID> Lexeme i
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 8: Token <ID> Lexeme k
Line# 8: Token <ASSIGNOP> Lexeme =
Line# 8: Token <CONST_INT> Lexeme 2
Line# 8: Token <MULOP> Lexeme *
Line# 8: Token <ID> Lexeme i
Line# 8: Token <ADDOP> Lexeme +
Line# 8: Token <CONST_INT> Lexeme 3
Line# 8: Token <MULOP> Lexeme *
Line# 8: Token <ID> Lexeme j
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <PRINTLN> Lexeme println
Line# 9: Token <LPAREN> Lexeme (
Line# 9: Token <ID> Lexeme k
Line# 9: Token <RPAREN> Lexeme )
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 11: Token <ID> Lexeme m
Line# 11: Token <ASSIGNOP> Lexeme =
Line# 11: Token <ID> Lexeme k
Line# 11: Token <MULOP> Lexeme %
Line# 11: Token <CONST_INT> Lexeme 9
Line# 11: Token <SEMICOLON> Lexeme ;
Line# 12: Token <PRINTLN> Lexeme println
Line# 12: Token <LPAREN> Lexeme (
Line# 12: Token <ID> Lexeme m
Line# 12: Token <RPAREN> Lexeme )
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 14: Token <RCURL> Lexeme }
