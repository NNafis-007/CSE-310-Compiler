Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme i
Line# 3: Token <COMMA> Lexeme ,
Line# 3: Token <ID> Lexeme j
Line# 3: Token <COMMA> Lexeme ,
Line# 3: Token <ID> Lexeme k
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme i
Line# 5: Token <ASSIGNOP> Lexeme =
Line# 5: Token <CONST_INT> Lexeme 3
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme j
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 8
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <ID> Lexeme k
Line# 7: Token <ASSIGNOP> Lexeme =
Line# 7: Token <CONST_INT> Lexeme 6
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 10: Token <IF> Lexeme if
Line# 10: Token <LPAREN> Lexeme (
Line# 10: Token <ID> Lexeme i
Line# 10: Token <CONST_INT> Lexeme 3
Line# 10: Token <RPAREN> Lexeme )
Line# 10: Token <LCURL> Lexeme {
Line# 11: Token <PRINTLN> Lexeme println
Line# 11: Token <LPAREN> Lexeme (
Line# 11: Token <ID> Lexeme j
Line# 11: Token <RPAREN> Lexeme )
Line# 11: Token <SEMICOLON> Lexeme ;
Line# 12: Token <RCURL> Lexeme }
Line# 14: Token <IF> Lexeme if
Line# 14: Token <LPAREN> Lexeme (
Line# 14: Token <ID> Lexeme j
Line# 14: Token <CONST_INT> Lexeme 8
Line# 14: Token <RPAREN> Lexeme )
Line# 14: Token <LCURL> Lexeme {
Line# 15: Token <PRINTLN> Lexeme println
Line# 15: Token <LPAREN> Lexeme (
Line# 15: Token <ID> Lexeme i
Line# 15: Token <RPAREN> Lexeme )
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 16: Token <RCURL> Lexeme }
Line# 17: Token <ELSE> Lexeme else
Line# 17: Token <LCURL> Lexeme {
Line# 18: Token <PRINTLN> Lexeme println
Line# 18: Token <LPAREN> Lexeme (
Line# 18: Token <ID> Lexeme k
Line# 18: Token <RPAREN> Lexeme )
Line# 18: Token <SEMICOLON> Lexeme ;
Line# 19: Token <RCURL> Lexeme }
Line# 21: Token <IF> Lexeme if
Line# 21: Token <LPAREN> Lexeme (
Line# 21: Token <ID> Lexeme k
Line# 21: Token <RELOP> Lexeme !=
Line# 21: Token <CONST_INT> Lexeme 6
Line# 21: Token <RPAREN> Lexeme )
Line# 21: Token <LCURL> Lexeme {
Line# 22: Token <PRINTLN> Lexeme println
Line# 22: Token <LPAREN> Lexeme (
Line# 22: Token <ID> Lexeme k
Line# 22: Token <RPAREN> Lexeme )
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 23: Token <RCURL> Lexeme }
Line# 24: Token <ELSE> Lexeme else
Line# 24: Token <IF> Lexeme if
Line# 24: Token <LPAREN> Lexeme (
Line# 24: Token <ID> Lexeme j
Line# 24: Token <CONST_INT> Lexeme 8
Line# 24: Token <RPAREN> Lexeme )
Line# 24: Token <LCURL> Lexeme {
Line# 25: Token <PRINTLN> Lexeme println
Line# 25: Token <LPAREN> Lexeme (
Line# 25: Token <ID> Lexeme j
Line# 25: Token <RPAREN> Lexeme )
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 26: Token <RCURL> Lexeme }
Line# 27: Token <ELSE> Lexeme else
Line# 27: Token <IF> Lexeme if
Line# 27: Token <LPAREN> Lexeme (
Line# 27: Token <ID> Lexeme i
Line# 27: Token <CONST_INT> Lexeme 5
Line# 27: Token <RPAREN> Lexeme )
Line# 27: Token <LCURL> Lexeme {
Line# 28: Token <PRINTLN> Lexeme println
Line# 28: Token <LPAREN> Lexeme (
Line# 28: Token <ID> Lexeme i
Line# 28: Token <RPAREN> Lexeme )
Line# 28: Token <SEMICOLON> Lexeme ;
Line# 29: Token <RCURL> Lexeme }
Line# 30: Token <ELSE> Lexeme else
Line# 30: Token <LCURL> Lexeme {
Line# 31: Token <ID> Lexeme k
Line# 31: Token <ASSIGNOP> Lexeme =
Line# 31: Token <CONST_INT> Lexeme 0
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 32: Token <PRINTLN> Lexeme println
Line# 32: Token <LPAREN> Lexeme (
Line# 32: Token <ID> Lexeme k
Line# 32: Token <RPAREN> Lexeme )
Line# 32: Token <SEMICOLON> Lexeme ;
Line# 33: Token <RCURL> Lexeme }
Line# 36: Token <RETURN> Lexeme return
Line# 36: Token <CONST_INT> Lexeme 0
Line# 36: Token <SEMICOLON> Lexeme ;
Line# 37: Token <RCURL> Lexeme }
